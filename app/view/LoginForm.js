/*
 * File: app/view/LoginForm.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LoginForm', {
  extend: 'Ext.form.Panel',
  alias: 'widget.loginform',

  requires: [
    'MyApp.view.LotesFormViewModel5',
    'Ext.form.field.Text',
    'Ext.container.Container',
    'Ext.button.Button'
  ],

  config: {
    initialTitle: 'Datos de conexión'
  },

  viewModel: {
    type: 'loginform'
  },
  cls: 'formpanel',
  scrollable: true,
  bodyPadding: 10,
  title: 'Datos de conexión',
  defaultListenerScope: true,

  layout: {
    type: 'vbox',
    align: 'stretch'
  },
  items: [
    {
      xtype: 'textfield',
      itemId: 'usuario',
      fieldLabel: 'Usuario*',
      name: 'usuario',
      allowBlank: false,
      blankText: 'Este campo es obligatorio',
      enableKeyEvents: true
    },
    {
      xtype: 'textfield',
      itemId: 'clave',
      fieldLabel: 'Clave*',
      name: 'clave',
      inputType: 'password',
      allowBlank: false,
      blankText: 'Este campo es obligatorio',
      enableKeyEvents: true
    },
    {
      xtype: 'textfield',
      itemId: 'base',
      fieldLabel: 'Base*',
      name: 'base',
      allowBlank: false,
      blankText: 'Este campo es obligatorio',
      enableKeyEvents: true
    },
    {
      xtype: 'textfield',
      itemId: 'servidor',
      fieldLabel: 'Servidor*',
      name: 'servidor',
      allowBlank: false,
      blankText: 'Este campo es obligatorio',
      enableKeyEvents: true
    }
  ],
  dockedItems: [
    {
      xtype: 'container',
      dock: 'bottom',
      layout: {
        type: 'hbox',
        align: 'stretch',
        pack: 'center'
      },
      items: [
        {
          xtype: 'button',
          handler: function(button, e) {
            var formWrapper = this.up('[cls=formpanel]');
            if(formWrapper.getForm().isValid()) {
              var val = formWrapper.getValues();

              window.localStorage.setItem("agrimanager_usuario", val.usuario);
              window.localStorage.setItem("agrimanager_clave", val.clave);
              window.localStorage.setItem("agrimanager_base", val.base);
              window.localStorage.setItem("agrimanager_servidor", val.servidor);

              MyApp.usuario = val.usuario;
              MyApp.clave = val.clave;
              MyApp.base_nombre = val.base;
              MyApp.base_url = val.servidor;
              formWrapper.saved=true;
              f_crud.close_form(formWrapper);
            }
          },
          margins: '',
          margin: 10,
          iconCls: 'x-fa fa-check',
          text: 'Aceptar'
        },
        {
          xtype: 'button',
          handler: function(button, e) {
            f_crud.close_form(this.up("[cls=formpanel]"));
          },
          margin: 10,
          iconCls: 'x-fa fa-remove',
          text: 'Cancelar'
        }
      ]
    }
  ],
  listeners: {
    activate: 'onFormActivate',
    render: 'onFormRender'
  },

  onFormActivate: function(component, eOpts) {
    var item = component.header.title.text,
        form = component,
        user = window.localStorage.getItem("agrimanager_usuario"),
        clave = window.localStorage.getItem("agrimanager_clave"),
        server = window.localStorage.getItem("agrimanager_servidor"),
        base = window.localStorage.getItem("agrimanager_base");

    if(component.action === 'ADD') {
      component.setTitle('Nuevo ' + item);
    }
    else if(component.action === 'EDIT') {
      component.setTitle('Editar ' + item);
    }
    else {
      component.setTitle(item);
    }

    // user
    if(user) {
      form.down('#usuario').setValue(user);
    }else {
      form.down('#usuario').setValue('Admin');
    }

    // pass
    if(clave) {
      form.down('#clave').setValue(clave);
    }else{
      form.down('#clave').setValue('Synagro');
    }

    // server
    if(server) {
      form.down('#servidor').setValue(server);
    }else {
      form.down('#servidor').setValue('sistec01.dnsalias.com');
    }

    // base
    if(base) {
      form.down('#base').setValue(base);
    }else {
      form.down('#base').setValue('sistec01');
    }
  },

  onFormRender: function(component, eOpts) {

  }

});