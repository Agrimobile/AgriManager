/*
 * File: app/view/PanelLotes.js
 *
 * This file was generated by Sencha Architect version 4.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.PanelLotes', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.panellotes',

    requires: [
        'MyApp.view.PanelLotesViewModel',
        'Ext.panel.Tool',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.form.Panel',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'panellotes'
    },
    flex: 1,
    itemId: 'gridpanel',
    title: 'Lotes',
    titleAlign: 'center',
    defaultListenerScope: true,

    tools: [
        {
            xtype: 'tool',
            cls: 'paneltool',
            iconCls: 'x-fa fa-arrow-left',
            listeners: {
                click: 'onToolClick'
            }
        }
    ],
    items: [
        {
            xtype: 'gridpanel',
            itemId: 'grid',
            header: false,
            title: 'Lotes',
            store: 'Lotes',
            listeners: {
                selectionchange: 'onGridSelectionChange'
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'estado_registro',
                    text: 'Estado Registro'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'id',
                    text: 'ID'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'uid',
                    text: 'Uid',
                    format: '00'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'codigo',
                    text: 'Codigo',
                    format: '00'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'nombre',
                    text: 'Nombre'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'superficie',
                    text: 'Superficie'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'cod_establecimiento',
                    text: 'Cod Establecimiento',
                    format: '00'
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'form',
            dock: 'bottom',
            bodyPadding: 10,
            header: false,
            title: 'My Form',
            layout: {
                type: 'hbox',
                align: 'stretch',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        f_crud.form_open(this.up("#gridpanel"),'ADD');
                    },
                    cls: '',
                    iconCls: 'x-fa fa-plus',
                    text: 'Nuevo'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        f_crud.form_open(this.up('#gridpanel'),'EDIT');
                    },
                    cls: '',
                    margin: '0 0 0 10',
                    iconCls: 'x-fa fa-pencil',
                    text: 'Editar'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        f_crud.grid_delete(this.up('#gridpanel'));
                    },
                    cls: '',
                    margin: '0 0 0 10',
                    iconCls: 'x-fa fa-trash',
                    text: 'Borrar'
                }
            ]
        }
    ],
    listeners: {
        render: 'onPanelRender'
    },

    onToolClick: function(tool, e, owner, eOpts) {
        var thisPanel = MyApp.main.getLayout().getActiveItem();
        MyApp.main.getLayout().prev();
        thisPanel.close();
    },

    onGridSelectionChange: function(model, selected, eOpts) {
        this.record = selected[0];
    },

    onPanelRender: function(component, eOpts) {
        this.store_name = 'Lotes';
        this.model_name = 'MyApp.model.Lotes';
        this.form_name  = 'MyApp.view.LotesForm';
        var store = Ext.getStore(this.store_name);
        this.form_store_array = [store];

        f_crud.load_store(this.store_name);
    }

});